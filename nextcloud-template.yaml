---
apiVersion: v1
kind: Template
labels:
  template: nextcloud
message: "A nextclou instance was launched"
metadata:
  name: nextcloud
  annotations:
    description: |-
        Nextcloud service, without persistent storage.
        WARNING: Any data stored will be lost upon pod destruction. Only use this template for testing.
    iconClass: icon-other-unknown
    tags: "instant-app,nextcloud"

parameters:
  - name: APPLICATION_NAME
    displayName: "Application name"
    description: "Name of the application"
    value: "nextcloud"
    required: true

  - name: NEXTCLOUD_DB_NAME
    displayName: "Database name"
    description: "Postgres database name for nextcloud"
    value: "nextcloud"
    required: true

  - name: NEXTCLOUD_DB_USER
    displayName: "Database username"
    description: "Postgres username for nextcloud"
    generate: expression
    from: "[a-z]{12}"
    required: true

  - name: NEXTCLOUD_DB_PASSWORD
    displayName: "Database password"
    description: "Postgres password for nextcloud"
    generate: expression
    from: "[a-zA-Z0-9]{12}"
    required: true

  - name: NEXTCLOUD_ADMIN_USER
    displayName: "Nextcloud admin user"
    description: "Nextcloud administrator user"
    value: "admin"
    required: true

  - name: NEXTCLOUD_ADMIN_PASSWORD
    displayName: "Nextcloud admin password"
    description: "Nextcloud administrator password"
    generate: expression
    from: "[a-zA-Z0-9]{12}"
    required: true

  - name: NEXTCLOUD_TRUSTED_DOMAINS
    displayName: "Nextcloud site domain"
    description: "Nextcloud base domaine name"
    required: true

objects:
  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    type: Opaque
    stringData:
      dbUsername: ${NEXTCLOUD_DB_USER}
      dbPassword: ${NEXTCLOUD_DB_PASSWORD}
      appUsername: ${NEXTCLOUD_ADMIN_USER}
      appPassword: ${NEXTCLOUD_ADMIN_PASSWORD}

  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: nginx-${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
      runPolicy: Serial
      triggers:
        - type: ImageChange
          imageChange:
            from:
              kind: ImageStreamTag
              name: nginx:latest
      source:
        git:
          uri: "https://github.com/ycornamusaz/docker-nginx-fpm"
        type: Git
      strategy:
        type: Docker
      output:
        to:
          kind: ImageStreamTag
          name: nginx-fpm:latest

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        name: ${APPLICATION_NAME}
      strategy:
        type: Rolling
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - nginx
            from:
              kind: ImageStreamTag
              name: nginx-fpm:latest
      template:
        metadata:
          labels:
            name: ${APPLICATION_NAME}
        spec:
          containers:
            - name: nextcloud
              image: nextcloud:13.0.7-fpm
              imagePullPolicy: IfNotPresent

              ports:
                - containerPort: 9000
                  protocol: TCP

              securityContext:
                capabilities: {}
                privileged: false

              volumeMounts:
                - name: data
                  mountPath: /var/www/html

              resources: {}

              capabilities: {}

              env:
                - name: POSTGRES_HOST
                  value: 127.0.0.1

                - name: POSTGRES_DB
                  value: "${NEXTCLOUD_DB_NAME}"

                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${APPLICATION_NAME}
                      key: dbUsername

                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${APPLICATION_NAME}
                      key: dbPassword

                - name: NEXTCLOUD_ADMIN_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${APPLICATION_NAME}
                      key: appUsername

                - name: NEXTCLOUD_ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${APPLICATION_NAME}
                      key: appPassword

                - name: NEXTCLOUD_TRUSTED_DOMAINS
                  value: "${NEXTCLOUD_TRUSTED_DOMAINS}"

              readinessProbe:
                tcpSocket:
                  port: 9000
                initialDelaySeconds: 15
                timeoutSeconds: 1

            - name: nginx
              image: ""
              imagePullPolicy: IfNotPresent

              ports:
                - containerPort: 8080
                  protocol: TCP

              securityContext:
                capabilities: {}
                privileged: false

              resources: {}

              volumeMounts:
                - name: data
                  mountPath: /var/www/html
                  readOnly: true

              capabilities: {}
              readinessProbe:
                tcpSocket:
                  port: 8080
                initialDelaySeconds: 15
                timeoutSeconds: 1


            - name: postgres
              image: centos/postgresql-96-centos7
              imagePullPolicy: IfNotPresent

              ports:
                - containerPort: 5432
                  protocol: TCP

              securityContext:
                capabilities: {}
                privileged: false

              resources: {}

              capabilities: {}

              volumeMounts:
                - name: pgdata
                  mountPath: /var/lib/postgresql/data

              env:
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${APPLICATION_NAME}
                      key: dbPassword

                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${APPLICATION_NAME}
                      key: dbUsername

                - name: POSTGRESQL_DATABASE
                  value: nextcloud

              readinessProbe:
                tcpSocket:
                  port: 5432
                initialDelaySeconds: 10
                timeoutSeconds: 1

          dnsPolicy: ClusterFirst
          restartPolicy: Always
          volumes:
            - name: data
              emptyDir: {}
            - name: pgdata
              emptyDir: {}

  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: nginx-fpm
      labels:
        app: ${APPLICATION_NAME}
      namespace: nextcloud-project
    spec:
      tag:
        name: latest

  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: nginx
      labels:
        app: ${APPLICATION_NAME}
      namespace: nextcloud-project
    spec:
      lookupPolicy:
        local: false
      dockerImageRepository: "docker.io/nginx"
      tags:
        - name: latest
          from:
            kind: DockerImage
            name: nginx:latest
          referencePolicy:
            type: Source

  - kind: Service
    apiVersion: v1
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
      selector:
        name: ${APPLICATION_NAME}
      ports:
        - name: http
          port: 8080
          protocol: TCP
          targetPort: 8080
    status:
      loadBalancer: {}

  - kind: Route
    apiVersion: v1
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
      host: ${NEXTCLOUD_TRUSTED_DOMAINS}
      to:
        kind: Service
        name: ${APPLICATION_NAME}
      port:
        targetPort: 8080

